// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VentasPetApi.Data;

#nullable disable

namespace VentasPetApi.Migrations
{
    [DbContext(typeof(VentasPetDbContext))]
    [Migration("20251009004438_AddAdvancedFilterTables")]
    partial class AddAdvancedFilterTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("VentasPetApi.Models.CarritoCompras", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaAgregado")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVariacion")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCarrito");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdVariacion");

                    b.ToTable("CarritoCompras");
                });

            modelBuilder.Entity("VentasPetApi.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoMascota")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Activa = true,
                            Descripcion = "Alimento balanceado para perros de todas las edades",
                            Nombre = "Alimento para Perros",
                            TipoMascota = "Perros"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Activa = true,
                            Descripcion = "Alimento balanceado para gatos de todas las edades",
                            Nombre = "Alimento para Gatos",
                            TipoMascota = "Gatos"
                        },
                        new
                        {
                            IdCategoria = 3,
                            Activa = true,
                            Descripcion = "Snacks y premios para perros y gatos",
                            Nombre = "Snacks y Premios",
                            TipoMascota = "Ambos"
                        },
                        new
                        {
                            IdCategoria = 4,
                            Activa = true,
                            Descripcion = "Accesorios para mascotas",
                            Nombre = "Accesorios",
                            TipoMascota = "Ambos"
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.CategoriaAlimento", b =>
                {
                    b.Property<int>("IdCategoriaAlimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMascotaTipo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdCategoriaAlimento");

                    b.HasIndex("IdMascotaTipo");

                    b.ToTable("CategoriaAlimento");

                    b.HasData(
                        new
                        {
                            IdCategoriaAlimento = 1,
                            Activa = true,
                            IdMascotaTipo = 2,
                            Nombre = "ALIMENTO SECO"
                        },
                        new
                        {
                            IdCategoriaAlimento = 2,
                            Activa = true,
                            IdMascotaTipo = 1,
                            Nombre = "ALIMENTO SECO"
                        },
                        new
                        {
                            IdCategoriaAlimento = 3,
                            Activa = true,
                            IdMascotaTipo = 2,
                            Nombre = "ALIMENTO HÚMEDO"
                        },
                        new
                        {
                            IdCategoriaAlimento = 4,
                            Activa = true,
                            IdMascotaTipo = 1,
                            Nombre = "ALIMENTO HÚMEDO"
                        },
                        new
                        {
                            IdCategoriaAlimento = 5,
                            Activa = true,
                            Nombre = "SNACKS Y PREMIOS"
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.ItemPedido", b =>
                {
                    b.Property<int>("IdItemPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPedido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVariacion")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdItemPedido");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdVariacion");

                    b.ToTable("ItemsPedido");
                });

            modelBuilder.Entity("VentasPetApi.Models.MascotaTipo", b =>
                {
                    b.Property<int>("IdMascotaTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IdMascotaTipo");

                    b.ToTable("MascotaTipo");

                    b.HasData(
                        new
                        {
                            IdMascotaTipo = 1,
                            Activo = true,
                            Nombre = "GATO"
                        },
                        new
                        {
                            IdMascotaTipo = 2,
                            Activo = true,
                            Nombre = "PERRO"
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DetallesPago")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdPedido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdTransaccion")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdPedido");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("VentasPetApi.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DireccionEnvio")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefonoContacto")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPedido")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("VentasPetApi.Models.PresentacionEmpaque", b =>
                {
                    b.Property<int>("IdPresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IdPresentacion");

                    b.ToTable("PresentacionEmpaque");

                    b.HasData(
                        new
                        {
                            IdPresentacion = 1,
                            Activa = true,
                            Nombre = "BOLSA"
                        },
                        new
                        {
                            IdPresentacion = 2,
                            Activa = true,
                            Nombre = "LATA"
                        },
                        new
                        {
                            IdPresentacion = 3,
                            Activa = true,
                            Nombre = "SOBRE"
                        },
                        new
                        {
                            IdPresentacion = 4,
                            Activa = true,
                            Nombre = "CAJA"
                        },
                        new
                        {
                            IdPresentacion = 5,
                            Activa = true,
                            Nombre = "TUBO"
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdCategoriaAlimento")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMascotaTipo")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdPresentacion")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdSubcategoria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreBase")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoMascota")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("URLImagen")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdCategoriaAlimento");

                    b.HasIndex("IdMascotaTipo");

                    b.HasIndex("IdPresentacion");

                    b.HasIndex("IdSubcategoria");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            IdProducto = 1,
                            Activo = true,
                            Descripcion = "Alimento balanceado para perros adultos de todas las razas",
                            FechaActualizacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5175),
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5175),
                            IdCategoria = 1,
                            IdCategoriaAlimento = 1,
                            IdMascotaTipo = 2,
                            IdPresentacion = 1,
                            IdSubcategoria = 2,
                            NombreBase = "Royal Canin Adult",
                            TipoMascota = "Perros",
                            URLImagen = "https://www.velykapet.com/productos/alimentos/perros/ROYAL_CANIN_ADULT.jpg"
                        },
                        new
                        {
                            IdProducto = 2,
                            Activo = true,
                            Descripcion = "Snack cremoso para gatos sabor atún, presentación 4 piezas de 56 gramos. Irresistible para tu felino.",
                            FechaActualizacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5181),
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5180),
                            IdCategoria = 3,
                            IdCategoriaAlimento = 5,
                            IdMascotaTipo = 1,
                            IdPresentacion = 3,
                            IdSubcategoria = 13,
                            NombreBase = "Churu Atún 4 Piezas 56gr",
                            TipoMascota = "Gatos",
                            URLImagen = "https://www.velykapet.com/CHURU_ATUN_4_PIEZAS_56_GR.jpg"
                        },
                        new
                        {
                            IdProducto = 3,
                            Activo = true,
                            Descripcion = "Nutrición científicamente formulada para cachorros",
                            FechaActualizacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5186),
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5185),
                            IdCategoria = 1,
                            IdCategoriaAlimento = 1,
                            IdMascotaTipo = 2,
                            IdPresentacion = 1,
                            IdSubcategoria = 3,
                            NombreBase = "Hill's Science Diet Puppy",
                            TipoMascota = "Perros",
                            URLImagen = "https://www.velykapet.com/productos/alimentos/perros/HILLS_SCIENCE_DIET_PUPPY.jpg"
                        },
                        new
                        {
                            IdProducto = 4,
                            Activo = true,
                            Descripcion = "Alimento completo y balanceado para gatos adultos",
                            FechaActualizacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5190),
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5190),
                            IdCategoria = 2,
                            IdCategoriaAlimento = 2,
                            IdMascotaTipo = 1,
                            IdPresentacion = 1,
                            IdSubcategoria = 6,
                            NombreBase = "Purina Pro Plan Adult Cat",
                            TipoMascota = "Gatos",
                            URLImagen = "https://www.velykapet.com/productos/alimentos/gatos/PURINA_PRO_PLAN_ADULT_CAT.jpg"
                        },
                        new
                        {
                            IdProducto = 5,
                            Activo = true,
                            Descripcion = "Premios naturales para perros y gatos",
                            FechaActualizacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5194),
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5194),
                            IdCategoria = 3,
                            IdCategoriaAlimento = 5,
                            IdPresentacion = 1,
                            IdSubcategoria = 13,
                            NombreBase = "Snacks Naturales",
                            TipoMascota = "Ambos",
                            URLImagen = "https://www.velykapet.com/productos/snacks/SNACKS_NATURALES.jpg"
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("NIT")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonaContacto")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("SitioWeb")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            ProveedorId = 1,
                            Activo = true,
                            Direccion = "Av. Insurgentes Sur 1234, Ciudad de México",
                            Email = "contacto@royalcanin.com.mx",
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5111),
                            FechaModificacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5128),
                            NIT = "900123456-7",
                            Nombre = "Royal Canin",
                            Notas = "Proveedor principal de alimento premium",
                            PersonaContacto = "María González",
                            RazonSocial = "Royal Canin México S.A. de C.V.",
                            SitioWeb = "https://www.royalcanin.com.mx",
                            Telefono = "55-1234-5678"
                        },
                        new
                        {
                            ProveedorId = 2,
                            Activo = true,
                            Direccion = "Blvd. Ávila Camacho 567, Estado de México",
                            Email = "ventas@hills.com.mx",
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5133),
                            FechaModificacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5134),
                            NIT = "900987654-3",
                            Nombre = "Hill's Science Diet",
                            Notas = "Especialistas en nutrición veterinaria",
                            PersonaContacto = "Carlos Rodríguez",
                            RazonSocial = "Hill's Pet Nutrition México",
                            SitioWeb = "https://www.hills.com.mx",
                            Telefono = "55-9876-5432"
                        },
                        new
                        {
                            ProveedorId = 3,
                            Activo = true,
                            Direccion = "Carretera México-Toluca Km 15.5, Estado de México",
                            Email = "distribuidores@purina.com.mx",
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5137),
                            FechaModificacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5137),
                            NIT = "900456789-1",
                            Nombre = "Purina Pro Plan",
                            Notas = "Alimento de alta calidad para mascotas",
                            PersonaContacto = "Ana Martínez",
                            RazonSocial = "Nestlé Purina PetCare México",
                            SitioWeb = "https://www.purina.com.mx",
                            Telefono = "55-4567-8912"
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.SubcategoriaAlimento", b =>
                {
                    b.Property<int>("IdSubcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCategoriaAlimento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdSubcategoria");

                    b.HasIndex("IdCategoriaAlimento");

                    b.ToTable("SubcategoriaAlimento");

                    b.HasData(
                        new
                        {
                            IdSubcategoria = 1,
                            Activa = true,
                            IdCategoriaAlimento = 1,
                            Nombre = "DIETA SECA PRESCRITA"
                        },
                        new
                        {
                            IdSubcategoria = 2,
                            Activa = true,
                            IdCategoriaAlimento = 1,
                            Nombre = "ADULT"
                        },
                        new
                        {
                            IdSubcategoria = 3,
                            Activa = true,
                            IdCategoriaAlimento = 1,
                            Nombre = "PUPPY"
                        },
                        new
                        {
                            IdSubcategoria = 4,
                            Activa = true,
                            IdCategoriaAlimento = 1,
                            Nombre = "SENIOR"
                        },
                        new
                        {
                            IdSubcategoria = 5,
                            Activa = true,
                            IdCategoriaAlimento = 2,
                            Nombre = "DIETA SECA PRESCRITA"
                        },
                        new
                        {
                            IdSubcategoria = 6,
                            Activa = true,
                            IdCategoriaAlimento = 2,
                            Nombre = "ADULT"
                        },
                        new
                        {
                            IdSubcategoria = 7,
                            Activa = true,
                            IdCategoriaAlimento = 2,
                            Nombre = "KITTEN"
                        },
                        new
                        {
                            IdSubcategoria = 8,
                            Activa = true,
                            IdCategoriaAlimento = 2,
                            Nombre = "INDOOR"
                        },
                        new
                        {
                            IdSubcategoria = 9,
                            Activa = true,
                            IdCategoriaAlimento = 3,
                            Nombre = "DIETA HÚMEDA PRESCRITA"
                        },
                        new
                        {
                            IdSubcategoria = 10,
                            Activa = true,
                            IdCategoriaAlimento = 3,
                            Nombre = "ADULT HÚMEDO"
                        },
                        new
                        {
                            IdSubcategoria = 11,
                            Activa = true,
                            IdCategoriaAlimento = 4,
                            Nombre = "DIETA HÚMEDA PRESCRITA"
                        },
                        new
                        {
                            IdSubcategoria = 12,
                            Activa = true,
                            IdCategoriaAlimento = 4,
                            Nombre = "ADULT HÚMEDO"
                        },
                        new
                        {
                            IdSubcategoria = 13,
                            Activa = true,
                            IdCategoriaAlimento = 5,
                            Nombre = "SNACKS NATURALES"
                        },
                        new
                        {
                            IdSubcategoria = 14,
                            Activa = true,
                            IdCategoriaAlimento = 5,
                            Nombre = "PREMIOS DE ENTRENAMIENTO"
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VentasPetApi.Models.VariacionProducto", b =>
                {
                    b.Property<int>("IdVariacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdProducto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdVariacion");

                    b.HasIndex("IdProducto");

                    b.ToTable("VariacionesProducto");

                    b.HasData(
                        new
                        {
                            IdVariacion = 1,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5239),
                            IdProducto = 1,
                            Peso = "3 KG",
                            Precio = 450.00m,
                            Stock = 25
                        },
                        new
                        {
                            IdVariacion = 2,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5243),
                            IdProducto = 1,
                            Peso = "7.5 KG",
                            Precio = 980.00m,
                            Stock = 15
                        },
                        new
                        {
                            IdVariacion = 3,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5246),
                            IdProducto = 1,
                            Peso = "15 KG",
                            Precio = 1850.00m,
                            Stock = 10
                        },
                        new
                        {
                            IdVariacion = 4,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5248),
                            IdProducto = 2,
                            Peso = "56 GR",
                            Precio = 85.00m,
                            Stock = 50
                        },
                        new
                        {
                            IdVariacion = 5,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5251),
                            IdProducto = 2,
                            Peso = "112 GR",
                            Precio = 160.00m,
                            Stock = 30
                        },
                        new
                        {
                            IdVariacion = 6,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5253),
                            IdProducto = 2,
                            Peso = "224 GR",
                            Precio = 295.00m,
                            Stock = 20
                        },
                        new
                        {
                            IdVariacion = 7,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5255),
                            IdProducto = 3,
                            Peso = "2 KG",
                            Precio = 380.00m,
                            Stock = 30
                        },
                        new
                        {
                            IdVariacion = 8,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5258),
                            IdProducto = 3,
                            Peso = "6 KG",
                            Precio = 920.00m,
                            Stock = 18
                        },
                        new
                        {
                            IdVariacion = 9,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5260),
                            IdProducto = 4,
                            Peso = "1 KG",
                            Precio = 185.00m,
                            Stock = 40
                        },
                        new
                        {
                            IdVariacion = 10,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5262),
                            IdProducto = 4,
                            Peso = "3 KG",
                            Precio = 495.00m,
                            Stock = 25
                        },
                        new
                        {
                            IdVariacion = 11,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5265),
                            IdProducto = 5,
                            Peso = "200 GR",
                            Precio = 85.00m,
                            Stock = 60
                        },
                        new
                        {
                            IdVariacion = 12,
                            Activa = true,
                            FechaCreacion = new DateTime(2025, 10, 9, 0, 44, 37, 398, DateTimeKind.Local).AddTicks(5267),
                            IdProducto = 5,
                            Peso = "500 GR",
                            Precio = 195.00m,
                            Stock = 35
                        });
                });

            modelBuilder.Entity("VentasPetApi.Models.CarritoCompras", b =>
                {
                    b.HasOne("VentasPetApi.Models.Usuario", "Usuario")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VentasPetApi.Models.VariacionProducto", "Variacion")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("IdVariacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Variacion");
                });

            modelBuilder.Entity("VentasPetApi.Models.CategoriaAlimento", b =>
                {
                    b.HasOne("VentasPetApi.Models.MascotaTipo", "MascotaTipo")
                        .WithMany("Categorias")
                        .HasForeignKey("IdMascotaTipo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MascotaTipo");
                });

            modelBuilder.Entity("VentasPetApi.Models.ItemPedido", b =>
                {
                    b.HasOne("VentasPetApi.Models.Pedido", "Pedido")
                        .WithMany("ItemsPedido")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VentasPetApi.Models.VariacionProducto", "Variacion")
                        .WithMany("ItemsPedido")
                        .HasForeignKey("IdVariacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Variacion");
                });

            modelBuilder.Entity("VentasPetApi.Models.Pago", b =>
                {
                    b.HasOne("VentasPetApi.Models.Pedido", "Pedido")
                        .WithMany("Pagos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("VentasPetApi.Models.Pedido", b =>
                {
                    b.HasOne("VentasPetApi.Models.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VentasPetApi.Models.Producto", b =>
                {
                    b.HasOne("VentasPetApi.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VentasPetApi.Models.CategoriaAlimento", "CategoriaAlimento")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaAlimento")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VentasPetApi.Models.MascotaTipo", "MascotaTipo")
                        .WithMany("Productos")
                        .HasForeignKey("IdMascotaTipo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VentasPetApi.Models.PresentacionEmpaque", "Presentacion")
                        .WithMany("Productos")
                        .HasForeignKey("IdPresentacion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VentasPetApi.Models.SubcategoriaAlimento", "Subcategoria")
                        .WithMany("Productos")
                        .HasForeignKey("IdSubcategoria")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VentasPetApi.Models.Proveedor", null)
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Categoria");

                    b.Navigation("CategoriaAlimento");

                    b.Navigation("MascotaTipo");

                    b.Navigation("Presentacion");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("VentasPetApi.Models.SubcategoriaAlimento", b =>
                {
                    b.HasOne("VentasPetApi.Models.CategoriaAlimento", "CategoriaAlimento")
                        .WithMany("Subcategorias")
                        .HasForeignKey("IdCategoriaAlimento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaAlimento");
                });

            modelBuilder.Entity("VentasPetApi.Models.VariacionProducto", b =>
                {
                    b.HasOne("VentasPetApi.Models.Producto", "Producto")
                        .WithMany("Variaciones")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("VentasPetApi.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("VentasPetApi.Models.CategoriaAlimento", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Subcategorias");
                });

            modelBuilder.Entity("VentasPetApi.Models.MascotaTipo", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("VentasPetApi.Models.Pedido", b =>
                {
                    b.Navigation("ItemsPedido");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("VentasPetApi.Models.PresentacionEmpaque", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("VentasPetApi.Models.Producto", b =>
                {
                    b.Navigation("Variaciones");
                });

            modelBuilder.Entity("VentasPetApi.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("VentasPetApi.Models.SubcategoriaAlimento", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("VentasPetApi.Models.Usuario", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("VentasPetApi.Models.VariacionProducto", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("ItemsPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
